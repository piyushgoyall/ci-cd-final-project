apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: buildah
  namespace: sn-labs-piyush2044be  # Specify your namespace here
  annotations:
    operator.tekton.dev/last-applied-hash: a19a8e147308c31a6a3077dd8de9b52aea3a526a9ca831953638471af4f1cd62
    tekton.dev/pipelines.minVersion: 0.12.1
    tekton.dev/tags: image-build
  labels:
    app.kubernetes.io/version: "0.1"
    operator.tekton.dev/operand-name: openshift-pipelines-addons
    operator.tekton.dev/provider-type: redhat
spec:
  description: |-
    Buildah task builds source into a container image and then pushes it to a container registry.
    Buildah Task builds source into a container image using Project Atomic's Buildah build tool. It uses Buildah's support for building from Dockerfiles, using its buildah bud command. This command executes the directives in the Dockerfile to assemble a container image, then pushes that image to a container registry.
  params:
    - description: Reference of the image buildah will produce.
      name: IMAGE
    - default: registry.redhat.io/rhel8/buildah@sha256:ac0b8714cc260c94435cab46fe41b3de0ccbc3d93e38c395fa9d52ac49e521fe
      description: The location of the buildah builder image.
      name: BUILDER_IMAGE
    - default: vfs
      description: Set buildah storage driver
      name: STORAGE_DRIVER
    - default: ./Dockerfile
      description: Path to the Dockerfile to build.
      name: DOCKERFILE
    - default: .
      description: Path to the directory to use as context.
      name: CONTEXT
    - default: "true"
      description: Verify the TLS on the registry endpoint (for push/pull to a non-TLS registry)
      name: TLSVERIFY
    - default: oci
      description: The format of the built container, oci or docker
      name: FORMAT
    - default: ""
      description: Extra parameters passed for the build command when building images.
      name: BUILD_EXTRA_ARGS
    - default: ""
      description: Extra parameters passed for the push command when pushing images.
      name: PUSH_EXTRA_ARGS
      type: string
    - default: "false"
      description: Skip pushing the built image
      name: SKIP_PUSH
  results:
    - description: Digest of the image just built.
      name: IMAGE_DIGEST
    - description: Image repository where the built image would be pushed to
      name: IMAGE_URL
  steps:
    - image: $(params.BUILDER_IMAGE)
      name: build-and-push
      script: |
        # Ensure BUILD_EXTRA_ARGS and PUSH_EXTRA_ARGS are passed as single arguments if they are provided
        buildah --storage-driver=$(params.STORAGE_DRIVER) bud \
          $(if [ ! -z "$(params.BUILD_EXTRA_ARGS)" ]; then echo "$(params.BUILD_EXTRA_ARGS)"; fi) --format=$(params.FORMAT) \
          --tls-verify=$(params.TLSVERIFY) --no-cache \
          -f $(params.DOCKERFILE) -t $(params.IMAGE) $(params.CONTEXT)

        [[ "$(params.SKIP_PUSH)" == "true" ]] && echo "Push skipped" && exit 0

        if [[ "$(workspaces.dockerconfig.bound)" == "true" ]]; then
          if test -f "$(workspaces.dockerconfig.path)/config.json"; then
            export DOCKER_CONFIG="$(workspaces.dockerconfig.path)"
          elif test -f "$(workspaces.dockerconfig.path)/.dockerconfigjson"; then
            cp "$(workspaces.dockerconfig.path)/.dockerconfigjson" "$HOME/.docker/config.json"
            export DOCKER_CONFIG="$HOME/.docker"
          else
            echo "neither 'config.json' nor '.dockerconfigjson' found at workspace root"
            exit 1
          fi
        fi

        buildah --storage-driver=$(params.STORAGE_DRIVER) push \
          $(if [ ! -z "$(params.PUSH_EXTRA_ARGS)" ]; then echo "$(params.PUSH_EXTRA_ARGS)"; fi) --tls-verify=$(params.TLSVERIFY) \
          --digestfile /tmp/image-digest $(params.IMAGE) \
          docker://$(params.IMAGE)
        
        cat /tmp/image-digest | tee $(results.IMAGE_DIGEST.path)
        echo "$(params.IMAGE)" | tee $(results.IMAGE_URL.path)
      securityContext:
        capabilities:
          add:
            - SETFCAP
      volumeMounts:
        - mountPath: /var/lib/containers
          name: varlibcontainers
      workingDir: $(workspaces.source.path)
  volumes:
    - emptyDir: {}
      name: varlibcontainers
  workspaces:
    - name: source
    - description: An optional workspace that allows providing a .docker/config.json file for Buildah to access the container registry. The file should be placed at the root of the Workspace with name config.json or .dockerconfigjson.
      name: dockerconfig
      optional: true
